<?php

/**
 * File: geonlp_dist.php
 * 分布情報保持サーバの簡易実装サンプル
 */

/*
 * HTTP リクエストの処理
 */
function process_request() {
  $postdata = file_get_contents("php://input");
  $request_json = json_decode($postdata, true);
  $error = null;
  $id = null;
  $json_rpc_version = '2.0';

  if (is_null($request_json)) {
    $error = array('code'=>-32700, 'message'=>'Parse error', 'data'=>$postdata);
  } else {

    // RPC version チェック
    $json_rpc_version = '1.0';
    if (array_key_exists('jsonrpc', $request_json) && $request_json['jsonrpc'] === '2.0') {
      $json_rpc_version = '2.0';
    }

    // method と id をチェック
    if (!array_key_exists('method', $request_json) || !array_key_exists('id', $request_json)) {
      $error = array('code'=>-32600, 'message'=>'Invalid Request', 'data'=>$request_json);
    } else {
      $id = $request_json['id'];
      execute($request_json, $result, $error);
    }
  }

  // レスポンスを構築
  if (is_null($error)) {
    $response = array('result' => $result, 'error' => null, 'id' => $id);
    if ($json_rpc_version === '2.0') $response['jsonrpc'] = '2.0';
  } else {
    $response = array('result' => null, 'id' => $id);
    if ($json_rpc_version === '2.0') {
      $response['jsonrpc'] = '2.0';
      $response['error'] = $error;
    } else {
      $error_data = var_export($error['data'], true);
      $response['error'] = sprintf("[%d]:%s,%s", $error['code'], $error['message'], $error_data);
    }
  }

  // send response
  header('Content-Type: application/json-rpc');
  print json_encode($response);

  exit(0);
}

/*
 * JSON リクエストを処理する
 * 
 */ 
function execute($request_json, &$result, &$error) {
  $params = $request_json['params'];
  try {
    switch($request_json['method']) {
    case "getAomoriWeight": // 青森県内なら1,県外なら0
      $result = array();
      foreach ($params[0] as $i => $latlon) {
	list($lat, $lon) = $latlon; // $i 番目の地名語の経緯度
	if ($lat < 40.15 || $lat > 41.63
	    || $lon < 139.76 || $lon > 141.78) {
	  // 青森県のだいたいの範囲の外にある
	  $result[$i] = 0.0;
	} else {
	  // 青森県のだいたいの範囲の内にある
	  $result[$i] = 1.0;
	}
      }
      break;
    default: // 未定義のメソッド
      $result = null;
      $error = array('code'=>-32601, 'message'=>'Method not found', 'data'=>$request_json['method']);
    }
  } catch (Exception $e) {
    $result = null;
    $error = array('code'=>32000, 'message'=>'Server error', 'data'=>$e->getMessage());
  }
  return is_null($error) ? true : false;
}

process_request();
